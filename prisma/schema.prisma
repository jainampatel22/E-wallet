generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int              @id @default(autoincrement())
  name             String?
  email            String?          @unique
  number           String           @unique
  password         String
  onRampTranscations OnRampTranscation[]
  balance          Balance?
  sendTransfers    P2PTranscation[] @relation(name: "FromUserRelation")
  receiveTransfers P2PTranscation[] @relation(name: "ToUserRelation")
}

model Balance {
  id      Int   @id @default(autoincrement())
  userId  Int   @unique
  amount  Int   @default(10000)
  locked  Int   @default(0)
  user    User  @relation(fields: [userId], references: [id])
}

model P2PTranscation {
  id         Int      @id @default(autoincrement())
  startTime  DateTime @default(now())
  amount     Int
  fromUserId Int
  fromUser   User     @relation(name: "FromUserRelation", fields: [fromUserId], references: [id])
  toUserId   Int
  toUser     User     @relation(name: "ToUserRelation", fields: [toUserId], references: [id])
  provider String
}

model OnRampTranscation {
  id        Int          @id @default(autoincrement())
  status    onRampStatus
  token     String       @unique
  provider  String
  amount    Int
  startTime DateTime   
  userId    Int
  user      User         @relation(fields: [userId], references: [id])

}

enum onRampStatus {
  Success
  Failure
  Processing
}
